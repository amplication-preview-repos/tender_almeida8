/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PurchaseOrder as PrismaPurchaseOrder,
  Supplier as PrismaSupplier,
} from "@prisma/client";
import { DataChangeSummary } from "../DataChangeSummary";

export class PurchaseOrderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PurchaseOrderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.purchaseOrder.count(args);
  }

  async purchaseOrders(
    args: Prisma.PurchaseOrderFindManyArgs
  ): Promise<PrismaPurchaseOrder[]> {
    return this.prisma.purchaseOrder.findMany(args);
  }
  async purchaseOrder(
    args: Prisma.PurchaseOrderFindUniqueArgs
  ): Promise<PrismaPurchaseOrder | null> {
    return this.prisma.purchaseOrder.findUnique(args);
  }
  async createPurchaseOrder(
    args: Prisma.PurchaseOrderCreateArgs
  ): Promise<PrismaPurchaseOrder> {
    return this.prisma.purchaseOrder.create(args);
  }
  async updatePurchaseOrder(
    args: Prisma.PurchaseOrderUpdateArgs
  ): Promise<PrismaPurchaseOrder> {
    return this.prisma.purchaseOrder.update(args);
  }
  async deletePurchaseOrder(
    args: Prisma.PurchaseOrderDeleteArgs
  ): Promise<PrismaPurchaseOrder> {
    return this.prisma.purchaseOrder.delete(args);
  }

  async getSupplier(parentId: string): Promise<PrismaSupplier | null> {
    return this.prisma.purchaseOrder
      .findUnique({
        where: { id: parentId },
      })
      .supplier();
  }
  async DataSynchronization(args: string): Promise<DataChangeSummary[]> {
    throw new Error("Not implemented");
  }
}
